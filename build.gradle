plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
}

group = 'fr.elite.vanillaextended'
version = '1.0'

task copyJar(type: Copy) {
    dependsOn shadowJar
    from('build/libs')
    into('C:\\Users\\Elite\\Desktop\\Test Server - Magical Sky\\plugins')
    include('*all.jar')
}

shadowJar.finalizedBy(copyJar)

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'minecraft-repo'
        url = 'https://libraries.minecraft.net/'
    }
    mavenCentral()
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    compileOnly 'com.mojang:authlib:1.5.25'
    compileOnly 'fr.minuskube.inv:smart-invs:1.2.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.jeff-media:custom-block-data:2.2.2'
}

shadowJar {
    dependencies {
        include(dependency('com.fasterxml.jackson.core:jackson-databind:2.13.0'))
        include(dependency('com.fasterxml.jackson.core:jackson-core:2.13.0'))
        include(dependency('com.fasterxml.jackson.core:jackson-annotations:2.13.0'))
        include(dependency('com.jeff-media:custom-block-data:2.2.2'))
    }
    relocate 'com.jeff_media.customblockdata', 'fr.elite'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

}
